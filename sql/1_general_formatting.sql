-- =========================================================
-- Step 1: Rebuild raw_df_table with correct data types
-- =========================================================
ALTER TABLE "raw_df_table" RENAME TO "raw_df_table_old";

CREATE TABLE "raw_df_table" (
	"PROD_CODE" TEXT,
	"PROD_DESC" TEXT,
	"FAMILY" TEXT,
	"QTT_AUG_24" INTEGER,
	"QTT_SEP_24" INTEGER,
	"QTT_OCT_24" INTEGER,
	"QTT_NOV_24" INTEGER,
	"QTT_DEC_24" INTEGER,
	"QTT_JAN_25" INTEGER,
	"QTT_FEB_25" INTEGER,
	"QTT_MAR_25" INTEGER,
	"QTT_APR_25" INTEGER,
	"QTT_MAY_25" INTEGER,
	"QTT_JUN_25" INTEGER,
	"QTT_JUL_25" INTEGER,
	"CURRENT_INVENTORY" INTEGER,
	"12M_FREQUENCY" INTEGER,
	"6M_FREQUENCY" INTEGER,
	"3M_FREQUENCY" INTEGER,
	"1M_FREQUENCY" INTEGER,
	"NEXT_MONTH_FORECAST" INTEGER
);

INSERT INTO "raw_df_table"
SELECT
	"PROD_CODE",
	"PROD_DESC",
	"FAMILY",
	CAST("QTT_AUG_24" AS INTEGER),
	CAST("QTT_SEP_24" AS INTEGER),
	CAST("QTT_OCT_24" AS INTEGER),
	CAST("QTT_NOV_24" AS INTEGER),
	CAST("QTT_DEC_24" AS INTEGER),
	CAST("QTT_JAN_25" AS INTEGER),
	CAST("QTT_FEB_25" AS INTEGER),
	CAST("QTT_MAR_25" AS INTEGER),
	CAST("QTT_APR_25" AS INTEGER),
	CAST("QTT_MAY_25" AS INTEGER),
	CAST("QTT_JUN_25" AS INTEGER),
	CAST("QTT_JUL_25" AS INTEGER),
	CAST("CURRENT_INVENTORY" AS INTEGER),
	CAST("12M_FREQUENCY" AS INTEGER),
	CAST("6M_FREQUENCY" AS INTEGER),
	CAST("3M_FREQUENCY" AS INTEGER),
	CAST("1M_FREQUENCY" AS INTEGER),
	CAST("NEXT_MONTH_FORECAST" AS INTEGER)
FROM "raw_df_table_old";

DROP TABLE "raw_df_table_old";


-- =========================================================
-- Step 2: Rebuild df_12m_capped with correct data types
-- =========================================================
ALTER TABLE "df_12m_capped" RENAME TO "df_12m_capped_old";

CREATE TABLE "df_12m_capped" (
	"PROD_CODE" TEXT,
	"PROD_DESC" TEXT,
	"FAMILY" TEXT,
	"QTT_AUG_24" INTEGER,
	"QTT_SEP_24" INTEGER,
	"QTT_OCT_24" INTEGER,
	"QTT_NOV_24" INTEGER,
	"QTT_DEC_24" INTEGER,
	"QTT_JAN_25" INTEGER,
	"QTT_FEB_25" INTEGER,
	"QTT_MAR_25" INTEGER,
	"QTT_APR_25" INTEGER,
	"QTT_MAY_25" INTEGER,
	"QTT_JUN_25" INTEGER,
	"QTT_JUL_25" INTEGER,
	"CURRENT_INVENTORY" INTEGER,
	"12M_FREQUENCY" INTEGER,
	"6M_FREQUENCY" INTEGER,
	"3M_FREQUENCY" INTEGER,
	"1M_FREQUENCY" INTEGER,
	"PERIOD_FREQUENCY" INTEGER,
	"PERFORMANCE_METRIC" INTEGER,
	"RANKING_PERFORMANCE" INTEGER,
	"CUMPERC_PERFORMANCE" FLOAT,
	"ABC_CLASS_PERFORMANCE" TEXT
);

INSERT INTO "df_12m_capped"
SELECT
	"PROD_CODE",
	"PROD_DESC",
	"FAMILY",
	CAST("QTT_AUG_24" AS INTEGER),
	CAST("QTT_SEP_24" AS INTEGER),
	CAST("QTT_OCT_24" AS INTEGER),
	CAST("QTT_NOV_24" AS INTEGER),
	CAST("QTT_DEC_24" AS INTEGER),
	CAST("QTT_JAN_25" AS INTEGER),
	CAST("QTT_FEB_25" AS INTEGER),
	CAST("QTT_MAR_25" AS INTEGER),
	CAST("QTT_APR_25" AS INTEGER),
	CAST("QTT_MAY_25" AS INTEGER),
	CAST("QTT_JUN_25" AS INTEGER),
	CAST("QTT_JUL_25" AS INTEGER),
	CAST("CURRENT_INVENTORY" AS INTEGER),
	CAST("12M_FREQUENCY" AS INTEGER),
	CAST("6M_FREQUENCY" AS INTEGER),
	CAST("3M_FREQUENCY" AS INTEGER),
	CAST("1M_FREQUENCY" AS INTEGER),
	CAST("PERIOD_FREQUENCY" AS INTEGER),
	CAST("PERFORMANCE_METRIC" AS INTEGER),
	CAST("RANKING_PERFORMANCE" AS INTEGER),
	"CUMPERC_PERFORMANCE",
	"ABC_CLASS_PERFORMANCE"
FROM "df_12m_capped_old";

DROP TABLE "df_12m_capped_old";


-- =========================================================
-- Step 3: Rebuild df_6m_capped with correct data types
-- =========================================================
ALTER TABLE "df_6m_capped" RENAME TO "df_6m_capped_old";

CREATE TABLE "df_6m_capped" (
	"PROD_CODE" TEXT,
	"PROD_DESC" TEXT,
	"FAMILY" TEXT,
	"QTT_FEB_25" INTEGER,
	"QTT_MAR_25" INTEGER,
	"QTT_APR_25" INTEGER,
	"QTT_MAY_25" INTEGER,
	"QTT_JUN_25" INTEGER,
	"QTT_JUL_25" INTEGER,
	"CURRENT_INVENTORY" INTEGER,
	"12M_FREQUENCY" INTEGER,
	"6M_FREQUENCY" INTEGER,
	"3M_FREQUENCY" INTEGER,
	"1M_FREQUENCY" INTEGER,
	"PERIOD_FREQUENCY" INTEGER,
	"PERFORMANCE_METRIC" INTEGER,
	"RANKING_PERFORMANCE" INTEGER,
	"CUMPERC_PERFORMANCE" FLOAT,
	"ABC_CLASS_PERFORMANCE" TEXT
);

INSERT INTO "df_6m_capped"
SELECT
	"PROD_CODE",
	"PROD_DESC",
	"FAMILY",
	CAST("QTT_FEB_25" AS INTEGER),
	CAST("QTT_MAR_25" AS INTEGER),
	CAST("QTT_APR_25" AS INTEGER),
	CAST("QTT_MAY_25" AS INTEGER),
	CAST("QTT_JUN_25" AS INTEGER),
	CAST("QTT_JUL_25" AS INTEGER),
	CAST("CURRENT_INVENTORY" AS INTEGER),
	CAST("12M_FREQUENCY" AS INTEGER),
	CAST("6M_FREQUENCY" AS INTEGER),
	CAST("3M_FREQUENCY" AS INTEGER),
	CAST("1M_FREQUENCY" AS INTEGER),
	CAST("PERIOD_FREQUENCY" AS INTEGER),
	CAST("PERFORMANCE_METRIC" AS INTEGER),
	CAST("RANKING_PERFORMANCE" AS INTEGER),
	"CUMPERC_PERFORMANCE",
	"ABC_CLASS_PERFORMANCE"
FROM "df_6m_capped_old";

DROP TABLE "df_6m_capped_old";


-- =========================================================
-- Step 4: Rebuild df_3m_capped with correct data types
-- =========================================================
ALTER TABLE "df_3m_capped" RENAME TO "df_3m_capped_old";

CREATE TABLE "df_3m_capped" (
	"PROD_CODE" TEXT,
	"PROD_DESC" TEXT,
	"FAMILY" TEXT,
	"QTT_MAY_25" INTEGER,
	"QTT_JUN_25" INTEGER,
	"QTT_JUL_25" INTEGER,
	"CURRENT_INVENTORY" INTEGER,
	"12M_FREQUENCY" INTEGER,
	"6M_FREQUENCY" INTEGER,
	"3M_FREQUENCY" INTEGER,
	"1M_FREQUENCY" INTEGER,
	"PERIOD_FREQUENCY" INTEGER,
	"PERFORMANCE_METRIC" INTEGER,
	"RANKING_PERFORMANCE" INTEGER,
	"CUMPERC_PERFORMANCE" FLOAT,
	"ABC_CLASS_PERFORMANCE" TEXT
);

INSERT INTO "df_3m_capped"
SELECT
	"PROD_CODE",
	"PROD_DESC",
	"FAMILY",
	CAST("QTT_MAY_25" AS INTEGER),
	CAST("QTT_JUN_25" AS INTEGER),
	CAST("QTT_JUL_25" AS INTEGER),
	CAST("CURRENT_INVENTORY" AS INTEGER),
	CAST("12M_FREQUENCY" AS INTEGER),
	CAST("6M_FREQUENCY" AS INTEGER),
	CAST("3M_FREQUENCY" AS INTEGER),
	CAST("1M_FREQUENCY" AS INTEGER),
	CAST("PERIOD_FREQUENCY" AS INTEGER),
	CAST("PERFORMANCE_METRIC" AS INTEGER),
	CAST("RANKING_PERFORMANCE" AS INTEGER),
	"CUMPERC_PERFORMANCE",
	"ABC_CLASS_PERFORMANCE"
FROM "df_3m_capped_old";

DROP TABLE "df_3m_capped_old";


-- =========================================================
-- Step 5: Rebuild df_1m_capped with correct data types
-- =========================================================
ALTER TABLE "df_1m_capped" RENAME TO "df_1m_capped_old";

CREATE TABLE "df_1m_capped" (
	"PROD_CODE" TEXT,
	"PROD_DESC" TEXT,
	"FAMILY" TEXT,
	"QTT_JUL_25" INTEGER,
	"CURRENT_INVENTORY" INTEGER,
	"12M_FREQUENCY" INTEGER,
	"6M_FREQUENCY" INTEGER,
	"3M_FREQUENCY" INTEGER,
	"1M_FREQUENCY" INTEGER,
	"PERIOD_FREQUENCY" INTEGER,
	"PERFORMANCE_METRIC" INTEGER,
	"RANKING_PERFORMANCE" FLOAT,
	"CUMPERC_PERFORMANCE" FLOAT,
	"ABC_CLASS_PERFORMANCE" TEXT
);

INSERT INTO "df_1m_capped"
SELECT
	"PROD_CODE",
	"PROD_DESC",
	"FAMILY",
	CAST("QTT_JUL_25" AS INTEGER),
	CAST("CURRENT_INVENTORY" AS INTEGER),
	CAST("12M_FREQUENCY" AS INTEGER),
	CAST("6M_FREQUENCY" AS INTEGER),
	CAST("3M_FREQUENCY" AS INTEGER),
	CAST("1M_FREQUENCY" AS INTEGER),
	CAST("PERIOD_FREQUENCY" AS INTEGER),
	CAST("PERFORMANCE_METRIC" AS INTEGER),
	CAST("RANKING_PERFORMANCE" AS INTEGER),
	"CUMPERC_PERFORMANCE",
	"ABC_CLASS_PERFORMANCE"
FROM "df_1m_capped_old";

DROP TABLE "df_1m_capped_old";


-- =========================================================
-- Step 6: Add INVENTORY_GOAL column + compute goals
-- =========================================================
ALTER TABLE "df_12m_capped" ADD COLUMN "INVENTORY_GOAL" INTEGER;
ALTER TABLE "df_6m_capped" ADD COLUMN "INVENTORY_GOAL" INTEGER;
ALTER TABLE "df_3m_capped" ADD COLUMN "INVENTORY_GOAL" INTEGER;
ALTER TABLE "df_1m_capped" ADD COLUMN "INVENTORY_GOAL" INTEGER;

UPDATE "df_12m_capped"
SET INVENTORY_GOAL = ROUND(
  ((QTT_AUG_24 + QTT_SEP_24 + QTT_OCT_24 + QTT_NOV_24 + QTT_DEC_24 +
    QTT_JAN_25 + QTT_FEB_25 + QTT_MAR_25 + QTT_APR_25 + QTT_MAY_25 +
    QTT_JUN_25 + QTT_JUL_25) / 12.0) * 1.5, 0
);

UPDATE "df_6m_capped"
SET INVENTORY_GOAL = ROUND(
  ((QTT_FEB_25 + QTT_MAR_25 + QTT_APR_25 + QTT_MAY_25 + QTT_JUN_25 + QTT_JUL_25) / 6.0) * 1.5, 0
);

UPDATE "df_3m_capped"
SET INVENTORY_GOAL = ROUND(((QTT_MAY_25 + QTT_JUN_25 + QTT_JUL_25) / 3.0) * 1.5, 0);

UPDATE "df_1m_capped"
SET INVENTORY_GOAL = ROUND((QTT_JUL_25 / 1.0) * 1.5, 0);


-- =========================================================
-- Step 7: Quick validation checks (sample SELECTs)
-- =========================================================
SELECT PROD_CODE, CURRENT_INVENTORY, INVENTORY_GOAL, ABC_CLASS_PERFORMANCE FROM "df_12m_capped" LIMIT 10;
SELECT PROD_CODE, CURRENT_INVENTORY, INVENTORY_GOAL, ABC_CLASS_PERFORMANCE FROM "df_6m_capped" LIMIT 10;
SELECT PROD_CODE, CURRENT_INVENTORY, INVENTORY_GOAL, ABC_CLASS_PERFORMANCE FROM "df_3m_capped" LIMIT 10;
SELECT PROD_CODE, CURRENT_INVENTORY, INVENTORY_GOAL, ABC_CLASS_PERFORMANCE FROM "df_1m_capped" LIMIT 10;


-- =========================================================
-- Step 8: Rebuild IQR-related tables (clean schema)
-- =========================================================
ALTER TABLE "df_12m_iqr" RENAME TO "df_12m_iqr_old";
CREATE TABLE "df_12m_iqr" (
	"PROD_CODE" TEXT,
	"PROD_DESC" TEXT,
	"FAMILY" TEXT,
	"Q1" FLOAT,
	"Q3" FLOAT,
	"IQR" FLOAT,
	"LOWER_BOUND" FLOAT,
	"UPPER_BOUND" FLOAT
);
INSERT INTO "df_12m_iqr" SELECT * FROM "df_12m_iqr_old";
DROP TABLE "df_12m_iqr_old";

ALTER TABLE "df_6m_iqr" RENAME TO "df_6m_iqr_old";
CREATE TABLE "df_6m_iqr" (
	"PROD_CODE" TEXT,
	"PROD_DESC" TEXT,
	"FAMILY" TEXT,
	"Q1" FLOAT,
	"Q3" FLOAT,
	"IQR" FLOAT,
	"LOWER_BOUND" FLOAT,
	"UPPER_BOUND" FLOAT
);
INSERT INTO "df_6m_iqr" SELECT * FROM "df_6m_iqr_old";
DROP TABLE "df_6m_iqr_old";

ALTER TABLE "df_3m_iqr" RENAME TO "df_3m_iqr_old";
CREATE TABLE "df_3m_iqr" (
	"PROD_CODE" TEXT,
	"PROD_DESC" TEXT,
	"FAMILY" TEXT,
	"Q1" FLOAT,
	"Q3" FLOAT,
	"IQR" FLOAT,
	"LOWER_BOUND" FLOAT,
	"UPPER_BOUND" FLOAT
);
INSERT INTO "df_3m_iqr" SELECT * FROM "df_3m_iqr_old";
DROP TABLE "df_3m_iqr_old";

ALTER TABLE "df_1m_iqr" RENAME TO "df_1m_iqr_old";
CREATE TABLE "df_1m_iqr" (
	"PROD_CODE" TEXT,
	"PROD_DESC" TEXT,
	"FAMILY" TEXT,
	"QTT_JUL_25" INTEGER,
	"CURRENT_INVENTORY" INTEGER,
	"12M_FREQUENCY" INTEGER,
	"6M_FREQUENCY" INTEGER,
	"3M_FREQUENCY" INTEGER,
	"1M_FREQUENCY" INTEGER
);
INSERT INTO "df_1m_iqr"
SELECT
	"PROD_CODE",
	"PROD_DESC",
	"FAMILY",
	CAST("QTT_JUL_25" AS INTEGER),
	CAST("CURRENT_INVENTORY" AS INTEGER),
	CAST("12M_FREQUENCY" AS INTEGER),
	CAST("6M_FREQUENCY" AS INTEGER),
	CAST("3M_FREQUENCY" AS INTEGER),
	CAST("1M_FREQUENCY" AS INTEGER)
FROM "df_1m_iqr_old";
DROP TABLE "df_1m_iqr_old";